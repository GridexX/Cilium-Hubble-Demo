version: '3'
services:

  products:
    container_name: products_service
    build:
      context: ./Products
      dockerfile: ../Dockerfile
    ports:
      - "8081:80"
    command:
      - --spring.data.mongodb.uri=mongodb://root:root@mongo:27017/catalog?authSource=admin
      - --server.port=80
    depends_on:
      - mongo
    networks:
      - my-network

  orders:
    container_name: orders_service
    build:
      context: ./Order
      dockerfile: ../Dockerfile
    ports:
      - "8080:80"
    command:
      - --spring.datasource.url=r2dbc:postgresql://postgres:5432/postgres
      - --server.port=80
      - --spring.productservice.url=http://products:80
    depends_on:
      - mongo
    networks:
      - my-network

  mongo:
    image: bitnami/mongodb:4.4.14-debian-10-r33
    restart: always
    networks:
        - my-network
    ports:
      - "27017:27017"
    volumes:
      - mongo:/bitnami/mongodb
    environment:
      - MONGODB_DATABASE=products
      - MONGODB_ROOT_PASSWORD=root

  postgres:
    image: bitnami/postgresql:14.1.0-debian-10-r31
    restart: always
    networks:
      - my-network
    ports:
      - "5432:5432"
    volumes:
      - postgres:/bitnami/postgresql
    environment:
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres


volumes:
  postgres:
  mongo:

networks:
    my-network:
